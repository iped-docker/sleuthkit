From bb8d3446fa2ba3cab72bcb1af1b77109c00883d2 Mon Sep 17 00:00:00 2001
From: Fabio Melo Pfeifer <fmpfeifer@gmail.com>
Date: Wed, 3 May 2017 09:12:11 -0300
Subject: [PATCH] Fix an error with multiple images open at the same time.
 Create a cache per libewf_handle.

---
 libewf/libewf_handle.c | 20 +++++++++++++-------
 libewf/libewf_handle.h |  2 ++
 2 files changed, 15 insertions(+), 7 deletions(-)

diff --git a/libewf/libewf_handle.c b/libewf/libewf_handle.c
index bf90442..376daa9 100755
--- a/libewf/libewf_handle.c
+++ b/libewf/libewf_handle.c
@@ -72,7 +72,7 @@
     HASH_FIND(hh,head,offfiled,sizeof(off64_t),add)
 
 #define CACHE_BUFFER_SIZE 131072
-#define CACHE_CAPACITY 1024
+#define CACHE_CAPACITY 512
 
 /* Initialize the handle
  * The handle must point to a NULL pointer to be allocated
@@ -207,6 +207,7 @@ int libewf_handle_initialize(
 	}
 	internal_handle->date_format                    = LIBEWF_DATE_FORMAT_CTIME;
 	internal_handle->maximum_number_of_open_handles = LIBBFIO_POOL_UNLIMITED_NUMBER_OF_OPEN_HANDLES;
+	internal_handle->cache							= NULL;
 
 	*handle = (libewf_handle_t *) internal_handle;
 
@@ -4689,34 +4690,38 @@ ssize_t libewf_handle_read_chunk(
 }
 
 
-
 struct CacheEntry {
 	off64_t key;
 	uint8_t *value;
 	UT_hash_handle hh;
 };
-static struct CacheEntry *cache = NULL;
 
-static uint8_t* find_in_cache(off64_t key)
+static uint8_t* find_in_cache(libewf_handle_t *handle, off64_t key)
 {
+	libewf_internal_handle_t *internal_handle = (libewf_internal_handle_t*) handle;
+	struct CacheEntry *cache = (struct CacheEntry*) internal_handle->cache;
 	struct CacheEntry *entry;
 	HASH_FIND_OFF(cache, &key, entry);
 	if (entry) {
 		// remove it (so the subsequent add will throw it on the front of the list)
 		HASH_DELETE(hh, cache, entry);
 		HASH_ADD_OFF(cache, key, entry);
+		internal_handle->cache = cache;
 		return entry->value;
 	}
 	return NULL;
 }
 
-static void add_to_cache(off64_t key, uint8_t *value)
+static void add_to_cache(libewf_handle_t *handle, off64_t key, uint8_t *value)
 {
+	libewf_internal_handle_t *internal_handle = (libewf_internal_handle_t*)handle;
+	struct CacheEntry *cache = (struct CacheEntry*) internal_handle->cache;
 	struct CacheEntry *entry, *tmp_entry;
 	entry = malloc(sizeof(struct CacheEntry));
 	entry->key = key;
 	entry->value = value;
 	HASH_ADD_OFF(cache, key, entry);
+	
 
 	// prune the cache to CACHE_CAPACITY
 	if (HASH_COUNT(cache) >= CACHE_CAPACITY) {
@@ -4728,6 +4733,7 @@ static void add_to_cache(off64_t key, uint8_t *value)
 			break;
 		}
 	}
+	internal_handle->cache = (intptr_t*)cache;
 }
 
 /* Reads (media) data at the current offset into a buffer
@@ -4974,13 +4980,13 @@ static uint8_t* __libewf_get_buffer(libewf_handle_t *handle,
 	static char *function = "__libewf_get_buffer";
 	ssize_t cnt;
 
-	uint8_t* buf = find_in_cache(offset);
+	uint8_t* buf = find_in_cache(handle, offset);
 	if (buf != NULL) {
 		return buf;
 	}
 
 	buf = malloc(CACHE_BUFFER_SIZE);
-	add_to_cache(offset, buf);
+	add_to_cache(handle, offset, buf);
 	if (libewf_handle_seek_offset(
 		handle,
 		offset,
diff --git a/libewf/libewf_handle.h b/libewf/libewf_handle.h
index b78e173..0c70561 100755
--- a/libewf/libewf_handle.h
+++ b/libewf/libewf_handle.h
@@ -163,6 +163,8 @@ struct libewf_internal_handle
 	/* The single files
 	 */
 	libewf_single_files_t *single_files;
+
+	intptr_t *cache;
 };
 
 LIBEWF_EXTERN \
-- 
2.12.2

